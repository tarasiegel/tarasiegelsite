{
  "name": "parse-api",
  "description": "API for accessing Parse.com applications",
  "version": "0.3.0",
  "author": {
    "name": "Chris Johnson",
    "email": "tenorviol@yahoo.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/willsr/node-parse-api.git"
  },
  "main": "index",
  "engines": {
    "node": ">= 0.4.0"
  },
  "_npmUser": {
    "name": "willsr",
    "email": "will@31ll.com"
  },
  "_id": "parse-api@0.3.0",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "_engineSupported": true,
  "_npmVersion": "1.1.24",
  "_nodeVersion": "v0.6.19",
  "_defaultsLoaded": true,
  "dist": {
    "shasum": "d7600bf69b884b3b1bd855a4cf23068c6efb0a9b",
    "tarball": "http://registry.npmjs.org/parse-api/-/parse-api-0.3.0.tgz"
  },
  "readme": "Node Parse API\n==============\n\ninstall\n-------\n\n    npm install parse-api\n\nexamples\n--------\n\n### setup\n\n    var Parse = require('parse-api').Parse;\n    \n    var APP_ID = ...;\n    var MASTER_KEY = ...;\n    \n    var app = new Parse(APP_ID, MASTER_KEY);\n\n### insert\n\n    // add a Foo object, { foo: 'bar' }\n    app.insert('Foo', { foo: 'bar' }, function (err, response) {\n      console.log(response);\n    });\n\n### insert file\n\tvar fs = require('fs'),\n\t\tfileName = 'myMedia.mp3';\n\tfs.readFile(fileName, function (err, data) {\n\t\tif (err) throw err;\n\t\tapp.insertFile(fileName, data, 'audio/mpeg', function(err, response){\n\t\t\tif(err) throw err;\n\t\t\tconsole.log('Name: ' + response.name);\n\t\t\tconsole.log('Url: ' + response.url);\n\t\t});\n\t});\n\t \n### send global push notification\n\tapp.push({channel: \"\", data: {alert: \"Notification \", sound: \"\"}}, function (err, response) {\n\tconsole.log(response);\n\t});\n\n### find one\n\n    // the Foo with id = 'someId'\n    app.find('Foo', 'someId', function (err, response) {\n      console.log(response);\n    });\n\n### find many\n\n    // all Foo objects with foo = 'bar'\n    app.find('Foo', { foo: 'bar' }, function (err, response) {\n      console.log(response);\n    });\n\n\n### find many with ordered\n\n    // all Foo objects with foo = 'bar' and order by 'id'\n    app.find('Foo', { foo: 'bar', order: 'id'}, function (err, response) {\n      console.log(response);\n    });\n\n\n### find many with limited\n\n    // all Foo objects with foo = 'bar' and limited by 10\n    app.find('Foo', { foo: 'bar', limit: 10}, function (err, response) {\n      console.log(response);\n    });\n\n\n### update\n\n    app.update('Foo', 'someId', { foo: 'fubar' }, function (err, response) {\n      console.log(response);\n    });\n\n### delete\n\n    app.delete('Foo', 'someId', function (err) {\n      // nothing to see here\n    });\n",
  "maintainers": [
    {
      "name": "willsr",
      "email": "will@31ll.com"
    }
  ],
  "directories": {},
  "_shasum": "d7600bf69b884b3b1bd855a4cf23068c6efb0a9b",
  "_from": "parse-api@",
  "_resolved": "https://registry.npmjs.org/parse-api/-/parse-api-0.3.0.tgz"
}
